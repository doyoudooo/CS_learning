import math
import numpy as np
def func_base(day,j,w,h):   #第一个目标函数 输入-距离1月1日的天数，经度，维度，固定杆的长度-
    # b太阳高度角中的中间变量
    # p 太阳赤角
    #day=108
    b=2*math.pi*(day-1)/365
    p=0.006918-0.399912*math.cos(b)+0.070257*math.sin(b)-0.006758*math.cos(2*b) +0.000907*math.sin(2*b)-0.002697*math.cos(3*b)+0.00148*math.sin(3*b)
    # print(p)
    jindu=j#当前经度
    shicha=(120-jindu)*4
# 当前位置和北京时间的时差
    rfinish=[]
    for i in range(761,822,3):
    #附件一数据:  14:42-15:42= 882,943,3         943=(942+1)
    #附件二数据:  12:41-13:41= 761,822,3         822=(821+1)
    #附件三数据:  13:09-14:09= 789,850,3         850=(849+1)
        st=i-shicha
    # %北京时间的9-15点在当地时间的时刻
        # 882-942
        # t=[i for i in range(60)]
        # for i in range(60):
        #     t[i] = 15 * (st[i] - 720) / 60
        t=15*(st-720)/60
        # 时角
        d=w
    #    %当地纬度
        d=math.radians(d)
        t=math.radians(t)

        H = math.sin(d) * math.sin(p) + math.cos(d) * math.cos(p) * math.cos(t)

        x = math.asin(H)
        finish=math.tan(x)
        # % 太阳高度角的真切值

        L=h/finish
        rfinish.append(L)
    
    return rfinish
    
    
def func_length(day,j,w,h):   #第一个目标函数 输入-距离1月1日的天数，经度，维度，固定杆的长度-
    Lb = func_base(day,j,w,h)
    #yinglong=[1.1496 , 1.1822 , 1.2153,	1.2491,	1.2832 ,1.318 ,1.3534 ,	1.3894,	1.4262,	1.4634,	1.5015,	1.5402,	1.5799	,1.6201	,1.6613, 1.7033 , 1.7462 , 1.7901 , 1.835 , 1.8809 , 1.9279]
    # 附件一的数据
    data_two = [1.24725620500000,	1.22279459000000,	1.19892148600000,	1.17542896400000,	1.15243957300000,	1.12991747000000,	1.10783548000000,	1.08625420600000,	1.06508107200000,	1.04444626500000,	1.02426412600000,	1.00464031400000,	0.985490908000000,	0.966790494000000,	0.948584735000000,	0.930927881000000,	0.913751750000000,	0.897109051000000,	0.880973762000000,	0.865492259000000,	0.850504468000000]
    #data_three = [3.53314218400000,	3.54676802900000,	3.56179764300000,	3.57810071500000,	3.59575078300000,	3.61493428000000,	3.63542598300000,	3.65721827200000,	3.68054111500000,	3.70516783600000,	3.73127802500000,	3.75891791100000,	3.78808788800000,   3.81870101500000,	3.85080961900000,	3.88458522000000,	3.91991182800000,	3.95687599200000,	3.99553479000000,	4.03575083500000,	4.07786305900000]
    
    fist_min = 0
    for i in range(len(Lb)):
        fist_min += (Lb[i]-data_two[i])**2 ##########
    
    return fist_min
    #return Lb

def func_diff(day,j,w,h): #第二个目标函数，输入-距离1月1日的天数，经度，维度，固定杆的高度-   输出
    #data_one=[1.1496 , 1.1822 , 1.2153,	1.2491,	1.2832 ,1.318 ,1.3534 ,	1.3894,	1.4262,	1.4634,	1.5015,	1.5402,	1.5799	,1.6201	,1.6613, 1.7033 , 1.7462 , 1.7901 , 1.835 , 1.8809 , 1.9279]
    # 附件一的数据
    data_two = [1.24725620500000,	1.22279459000000,	1.19892148600000,	1.17542896400000,	1.15243957300000,	1.12991747000000,	1.10783548000000,	1.08625420600000,	1.06508107200000,	1.04444626500000,	1.02426412600000,	1.00464031400000,	0.985490908000000,	0.966790494000000,	0.948584735000000,	0.930927881000000,	0.913751750000000,	0.897109051000000,	0.880973762000000,	0.865492259000000,	0.850504468000000]
    #data_three = [3.53314218400000,	3.54676802900000,	3.56179764300000,	3.57810071500000,	3.59575078300000,	3.61493428000000,	3.63542598300000,	3.65721827200000,	3.68054111500000,	3.70516783600000,	3.73127802500000,	3.75891791100000,	3.78808788800000,   3.81870101500000,	3.85080961900000,	3.88458522000000,	3.91991182800000,	3.95687599200000,	3.99553479000000,	4.03575083500000,	4.07786305900000]
    
    Lb = func_base(day,j,w,h)
    diff_Lb = np.diff(Lb)
    diff_data = np.diff(data_two)##########
    second_min = 0
    for i in range(len(diff_Lb)):
        second_min += (diff_Lb[i]-diff_data[i])**2
    return second_min
    #return diff_Lb


#print(func_diff(295,116.39,39.91,3))  --- 问题一
#print(func_length(295,116.39,39.91,3))

